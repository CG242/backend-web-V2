# Generated by Django 5.2.7 on 2025-10-14 13:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('erosion', '0007_evenementexterne_fusiondonnees_predictionenrichie_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='prediction',
            old_name='parametres_modele',
            new_name='parametres_prediction',
        ),
        migrations.RemoveField(
            model_name='prediction',
            name='modele_utilise',
        ),
        migrations.AddField(
            model_name='prediction',
            name='features_entree',
            field=models.JSONField(blank=True, default=dict, help_text='Features utilisées pour la prédiction'),
        ),
        migrations.AddField(
            model_name='prediction',
            name='score_confiance',
            field=models.FloatField(blank=True, help_text='Score de confiance du modèle', null=True),
        ),
        migrations.AddField(
            model_name='prediction',
            name='taux_erosion_max_m_an',
            field=models.FloatField(default=0.0, help_text="Taux d'érosion maximum (intervalle de confiance)"),
        ),
        migrations.AddField(
            model_name='prediction',
            name='taux_erosion_min_m_an',
            field=models.FloatField(default=0.0, help_text="Taux d'érosion minimum (intervalle de confiance)"),
        ),
        migrations.AlterField(
            model_name='prediction',
            name='confiance_pourcentage',
            field=models.FloatField(default=50.0, help_text='Niveau de confiance en pourcentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.CreateModel(
            name='ModeleML',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('type_modele', models.CharField(choices=[('random_forest', 'Random Forest'), ('regression_lineaire', 'Régression Linéaire'), ('gradient_boosting', 'Gradient Boosting'), ('neural_network', 'Réseau de Neurones'), ('svm', 'Support Vector Machine')], max_length=30)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('entrainement', 'En entraînement'), ('erreur', 'Erreur')], default='inactif', max_length=20)),
                ('chemin_fichier', models.CharField(help_text='Chemin vers le fichier du modèle sauvegardé', max_length=255)),
                ('precision_score', models.FloatField(blank=True, help_text='Score de précision du modèle', null=True)),
                ('parametres_entrainement', models.JSONField(blank=True, default=dict)),
                ('features_utilisees', models.JSONField(blank=True, default=list, help_text='Liste des features utilisées')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_derniere_utilisation', models.DateTimeField(blank=True, null=True)),
                ('nombre_predictions', models.IntegerField(default=0)),
                ('commentaires', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Modèle ML',
                'verbose_name_plural': 'Modèles ML',
                'ordering': ['-date_creation'],
                'unique_together': {('nom', 'version')},
            },
        ),
        migrations.AddField(
            model_name='prediction',
            name='modele_ml',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='erosion.modeleml'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['zone', 'date_prediction'], name='erosion_pre_zone_id_bc8bb4_idx'),
        ),
        migrations.AddIndex(
            model_name='prediction',
            index=models.Index(fields=['modele_ml', 'date_prediction'], name='erosion_pre_modele__8a9dd0_idx'),
        ),
    ]
